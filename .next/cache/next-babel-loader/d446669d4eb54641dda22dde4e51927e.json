{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nvar Context = /*#__PURE__*/React.createContext();\n\nvar Provider = /*#__PURE__*/function (_Component) {\n  _inherits(Provider, _Component);\n\n  var _super = _createSuper(Provider);\n\n  function Provider() {\n    var _this;\n\n    _classCallCheck(this, Provider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      perPage: 4,\n      currentPage: 1,\n      currentType: \"hamısı\",\n      sortedData: null,\n      pagesSorted: null,\n      navActive: \"Home\",\n      sortData: function sortData(data, e) {\n        var type = e.target.innerHTML.toLowerCase();\n\n        _this.setState({\n          currentType: type\n        });\n\n        var perPage = 4;\n        var pagesSorted = [];\n\n        if (type == \"hamısı\") {\n          for (var i = 1; i <= Math.ceil(data.length / perPage); i++) {\n            pagesSorted.push(i);\n          }\n\n          _this.setState({\n            sortedData: data\n          });\n        } else {\n          var sortedData = [];\n\n          for (var _i = 0; _i < data.length; _i++) {\n            if (data[_i].category.name == type) {\n              sortedData.push(data[_i]);\n            }\n          }\n\n          for (var _i2 = 1; _i2 <= Math.ceil(sortedData.length / perPage); _i2++) {\n            pagesSorted.push(_i2);\n          }\n\n          _this.setState({\n            sortedData: sortedData\n          });\n        }\n\n        _this.setState({\n          pagesSorted: pagesSorted\n        });\n\n        _this.setState({\n          currentPage: 1\n        });\n      },\n      changePage: function changePage(e) {\n        _this.setState({\n          currentPage: e\n        });\n      },\n      changeUrl: function changeUrl(e) {\n        _this.setState({\n          currentPage: 1,\n          currentType: \"hamısı\",\n          sortedData: null,\n          pagesSorted: null\n        });\n\n        if (e.target.innerHTML == \"Home\") {\n          _this.setState({\n            navActive: null\n          });\n        } else {\n          _this.setState({\n            navActive: e.target.innerHTML\n          });\n        }\n      },\n      showMap: function showMap() {\n        document.querySelector(\"#popup-map\").classList.remove(\"display-none\");\n      },\n      basketItems: null,\n      basketCount: null,\n      basketTotal: null,\n      showBasket: function showBasket() {\n        var basketItems = [];\n        var basket = document.querySelector(\".basket\");\n\n        if (basket.classList.contains(\"display-block\")) {\n          return basket.classList.remove(\"display-block\");\n        } else {\n          var decodedCookie = decodeURIComponent(document.cookie);\n          var cookies = decodedCookie.split(\"; \");\n          var basketTotal = 0;\n\n          for (var i = 0; i < cookies.length; i++) {\n            if (cookies[i].split(\"=\")[1] == \"added to shop cart\") {\n              var arr = [];\n              cookies[i] = cookies[i].split(\"=\")[0];\n              arr.push(cookies[i].split(\", \")[0]);\n              arr.push(cookies[i].split(\", \")[1]);\n              arr.push(cookies[i].split(\", \")[2]);\n              arr.push(cookies[i].split(\", \")[3]);\n              arr.push(cookies[i].split(\", \")[4]);\n              arr.push(cookies[i].split(\", \")[5]);\n              arr.push(cookies[i].split(\", \")[6]);\n              basketItems.push(arr);\n              basketTotal += parseFloat(cookies[i].split(\", \")[5]);\n            }\n          }\n\n          basketTotal = parseFloat(basketTotal).toFixed(2);\n\n          _this.setState({\n            basketCount: basketItems.length\n          });\n\n          _this.setState({\n            basketItems: basketItems\n          });\n\n          _this.setState({\n            basketTotal: basketTotal\n          });\n\n          basket.classList.add(\"display-block\");\n        }\n      },\n      changeBasket: function changeBasket(e, item) {\n        var days = 30;\n        var d = new Date();\n        d.setTime(d.getTime() + days * 24 * 60 * 60 * 1000);\n        var expires = \"expires=\" + d.toUTCString();\n        document.cookie = \"\".concat(item[0], \", \").concat(item[1], \", \").concat(item[2], \", \").concat(item[3], \", \").concat(item[4], \", \").concat(item[5], \", \").concat(item[6]) + \"=\" + \"added to shop cart\" + \";\" + \"expires=Thu, 01 Jan 1970 00:00:01 GMT\" + \";path=/\";\n        var total = (parseFloat(e.target.value) * parseFloat(item[3])).toFixed(2);\n        document.cookie = \"\".concat(item[0], \", \").concat(item[1], \", \").concat(item[2], \", \").concat(item[3], \", \").concat(e.target.value, \", \").concat(total, \", \").concat(item[6]) + \"=\" + \"added to shop cart\" + \";\" + expires + \";path=/\";\n        var basketItems = [];\n        var basket = document.querySelector(\".basket\");\n        var decodedCookie = decodeURIComponent(document.cookie);\n        var cookies = decodedCookie.split(\"; \");\n\n        if (cookies[0].slice(2, 7) == \"http\") {\n          return basket.classList.add(\"display-block\");\n        }\n\n        var basketTotal = 0;\n\n        for (var i = 0; i < cookies.length; i++) {\n          if (cookies[i].split(\"=\")[1] == \"added to shop cart\") {\n            cookies[i] = cookies[i].split(\"=\")[0];\n            var arr = [];\n            arr.push(cookies[i].split(\", \")[0]);\n            arr.push(cookies[i].split(\", \")[1]);\n            arr.push(cookies[i].split(\", \")[2]);\n            arr.push(cookies[i].split(\", \")[3]);\n            arr.push(cookies[i].split(\", \")[4]);\n            arr.push(cookies[i].split(\", \")[5]);\n            arr.push(cookies[i].split(\", \")[6]);\n            basketItems.push(arr);\n            basketTotal += parseFloat(cookies[i].split(\", \")[5]);\n          }\n        }\n\n        basketTotal = parseFloat(basketTotal).toFixed(2);\n\n        _this.setState({\n          basketCount: basketItems.length\n        });\n\n        _this.setState({\n          basketItems: basketItems\n        });\n\n        _this.setState({\n          basketTotal: basketTotal\n        });\n      },\n      deleteBasket: function deleteBasket(e, item) {\n        var basket = document.querySelector(\".basket\");\n        var tr = e.target.closest(\"tr\");\n        var item4 = tr.querySelector(\".product_select\").value;\n        document.cookie = \"\".concat(item[0], \", \").concat(item[1], \", \").concat(item[2], \", \").concat(item[3], \", \").concat(item4, \", \").concat(item[5], \", \").concat(item[6]) + \"=\" + \"added to shop cart\" + \";\" + \"expires=Thu, 01 Jan 1970 00:00:01 GMT\" + \";path=/\";\n        var basketItems = [];\n        var decodedCookie = decodeURIComponent(document.cookie);\n        var cookies = decodedCookie.split(\"; \");\n        var basketTotal = 0;\n\n        for (var i = 0; i < cookies.length; i++) {\n          if (cookies[i].split(\"=\")[1] == \"added to shop cart\") {\n            cookies[i] = cookies[i].split(\"=\")[0];\n            var arr = [];\n            arr.push(cookies[i].split(\", \")[0]);\n            arr.push(cookies[i].split(\", \")[1]);\n            arr.push(cookies[i].split(\", \")[2]);\n            arr.push(cookies[i].split(\", \")[3]);\n            arr.push(cookies[i].split(\", \")[4]);\n            arr.push(cookies[i].split(\", \")[5]);\n            arr.push(cookies[i].split(\", \")[6]);\n            basketItems.push(arr);\n            basketTotal += parseFloat(cookies[i].split(\", \")[5]);\n          }\n        }\n\n        basketTotal = parseFloat(basketTotal).toFixed(2); // if (basketItems[0][0] == \"\") {\n        //   this.setState({ basketCount: null });\n        //   this.setState({ basketItems: null });\n        //   this.setState({ basketTotal: null });\n        // } else {\n\n        _this.setState({\n          basketCount: basketItems.length\n        });\n\n        _this.setState({\n          basketItems: basketItems\n        });\n\n        _this.setState({\n          basketTotal: basketTotal\n        }); // }\n\n      },\n      addCart: function addCart(item, type) {\n        var basket = document.querySelector(\".basket\");\n        var decodedCookie = decodeURIComponent(document.cookie);\n        var cookies = decodedCookie.split(\"; \");\n\n        for (var i = 0; i < cookies.length; i++) {\n          cookies[i] = cookies[i].split(\"=\")[0];\n          cookies[i] = cookies[i].split(\", \")[2];\n        }\n\n        if (cookies.indexOf(item.name) == -1) {\n          if (basket.classList.contains(\"display-block\")) {\n            basket.classList.remove(\"display-block\");\n          }\n\n          var days = 30;\n          var d = new Date();\n          d.setTime(d.getTime() + days * 24 * 60 * 60 * 1000);\n          var expires = \"expires=\" + d.toUTCString();\n\n          if (item.image) {\n            var src = \"/\" + item.image;\n          } else {\n            var src = \"/img/cake-feature/c-feature-9.jpg\";\n          }\n\n          if (item.discount) {\n            var price = item.discount;\n          } else {\n            var price = item.price;\n          }\n\n          document.cookie = // `${type}/${item.id}, ${src}, ${item.name}, ${price}, 1, ${item.price}` +\n          \"\".concat(item.id, \", \").concat(src, \", \").concat(item.name, \", \").concat(price, \", 1, \").concat(price, \", \").concat(type) + \"=\" + \"added to shop cart\" + \";\" + expires + \";path=/\";\n        } else {\n          alert(\"Bu məhsul artıq səbətə əlavə edilmişdir\");\n        }\n\n        var basketItems = [];\n        var decodedCookie = decodeURIComponent(document.cookie);\n        var cookies = decodedCookie.split(\"; \"); // if (cookies[0].slice(3, 7) != \"http\") {\n        //   return basket.classList.add(\"display-block\");\n        // }\n\n        var basketTotal = 0;\n\n        for (var _i3 = 0; _i3 < cookies.length; _i3++) {\n          if (cookies[_i3].split(\"=\")[1] == \"added to shop cart\") {\n            cookies[_i3] = cookies[_i3].split(\"=\")[0];\n            var arr = [];\n            arr.push(cookies[_i3].split(\", \")[0]);\n            arr.push(cookies[_i3].split(\", \")[1]);\n            arr.push(cookies[_i3].split(\", \")[2]);\n            arr.push(cookies[_i3].split(\", \")[3]);\n            arr.push(cookies[_i3].split(\", \")[4]);\n            arr.push(cookies[_i3].split(\", \")[5]);\n            arr.push(cookies[_i3].split(\", \")[6]);\n            basketItems.push(arr);\n            basketTotal += parseFloat(cookies[_i3].split(\", \")[5]);\n          }\n        }\n\n        basketTotal = parseFloat(basketTotal).toFixed(2);\n\n        _this.setState({\n          basketCount: basketItems.length\n        });\n\n        _this.setState({\n          basketItems: basketItems\n        });\n\n        _this.setState({\n          basketTotal: basketTotal\n        });\n\n        basket.classList.add(\"display-block\");\n      },\n      getBasketItems: function getBasketItems() {\n        var basketItems = [];\n        var decodedCookie = decodeURIComponent(document.cookie);\n        var cookies = decodedCookie.split(\"; \"); // if (cookies[0].slice(3, 7) != \"http\") {\n        //   return this.setState({ basketItems: basketItems });\n        // }\n\n        var basketTotal = 0;\n\n        for (var i = 0; i < cookies.length; i++) {\n          if (cookies[i].split(\"=\")[1] == \"added to shop cart\") {\n            cookies[i] = cookies[i].split(\"=\")[0];\n            var arr = [];\n            arr.push(cookies[i].split(\", \")[0]);\n            arr.push(cookies[i].split(\", \")[1]);\n            arr.push(cookies[i].split(\", \")[2]);\n            arr.push(cookies[i].split(\", \")[3]);\n            arr.push(cookies[i].split(\", \")[4]);\n            arr.push(cookies[i].split(\", \")[5]);\n            arr.push(cookies[i].split(\", \")[6]);\n            basketItems.push(arr);\n            basketTotal += parseFloat(cookies[i].split(\", \")[5]);\n          }\n        }\n\n        basketTotal = parseFloat(basketTotal).toFixed(2);\n\n        _this.setState({\n          basketCount: basketItems.length\n        });\n\n        _this.setState({\n          basketItems: basketItems\n        });\n\n        _this.setState({\n          basketTotal: basketTotal\n        });\n      },\n      cInput: {\n        name: null,\n        email: null,\n        phone: null,\n        subject: null,\n        message: null\n      },\n      cPost: \"\",\n      postContact: function postContact() {\n        var form = {\n          method: \"POST\",\n          body: JSON.stringify({\n            name: _this.state.cInput.name,\n            email: _this.state.cInput.email,\n            phone: _this.state.cInput.phone,\n            subject: _this.state.cInput.subject,\n            message: _this.state.cInput.message\n          }),\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n          }\n        };\n\n        if (_this.state.cInput.name == null || _this.state.cInput.name == \"\") {\n          return document.querySelector(\".contact_form_area input[name=name]\").parentElement.classList.add(\"input-div-error\");\n        }\n\n        if (_this.state.cInput.email == null || _this.state.cInput.email == \"\") {\n          return document.querySelector(\".contact_form_area input[name=email]\").parentElement.classList.add(\"input-div-error\");\n        }\n\n        if (_this.state.cInput.subject == null || _this.state.cInput.subject == \"\") {\n          return document.querySelector(\".contact_form_area input[name=subject]\").parentElement.classList.add(\"input-div-error\");\n        }\n\n        if (_this.state.cInput.message == null || _this.state.cInput.message == \"\") {\n          return document.querySelector(\".contact_form_area textarea\").parentElement.classList.add(\"input-div-error\");\n        } // let url = `http://192.168.31.51:8000/contact/`;\n\n\n        var url = \"http://api.purplecakeboutique.az/contact/\";\n        fetch(url, form).then(function (res) {\n          return res.json();\n        }).then(function (response) {\n          var inputs = document.querySelectorAll(\".contact_form_area input\");\n\n          for (var i = 0; i < inputs.length; i++) {\n            inputs[i].value = null;\n          }\n\n          document.querySelector(\".contact_form_area textarea\").value = null;\n\n          _this.setState({\n            contactSuccess: \"Mesajınız uğurla göndərildi.\"\n          });\n        })[\"catch\"](function (error) {\n          return _this.setState({\n            contactSuccess: \"Xəta baş verdi.\"\n          });\n        });\n      },\n      contactHandler: function contactHandler(e) {\n        var _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n\n        if (name != \"message\") {\n          document.querySelector(\".contact_form_area input[name=\".concat(name)).parentElement.classList.remove(\"input-div-error\");\n        } else {\n          document.querySelector(\".contact_form_area textarea\").parentElement.classList.remove(\"input-div-error\");\n        }\n\n        var formInput = _objectSpread({}, _this.state.cInput);\n\n        switch (name) {\n          case \"name\":\n            if (value) {\n              if (_this.state.cPost.indexOf(\"\".concat(name, \"=\").concat(_this.state.cInput.name, \"&\")) != -1) {\n                _this.setState({\n                  query: _this.state.cPost.replace(\"\".concat(name, \"=\").concat(_this.state.cInput.name, \"&\"), \"\") + \"\".concat(name, \"=\") + value + \"&\"\n                });\n              } else {\n                _this.setState({\n                  cPost: _this.state.cPost + \"\".concat(name, \"=\") + value + \"&\"\n                });\n              }\n            } else {\n              if (_this.state.cPost.indexOf(\"\".concat(name, \"=\").concat(_this.state.cInput.name, \"&\")) != -1) {\n                _this.setState({\n                  query: _this.state.cPost.replace(\"\".concat(name, \"=\").concat(_this.state.cInput.name, \"&\"), \"\")\n                });\n              }\n            }\n\n            formInput.name = value;\n            break;\n\n          case \"email\":\n            if (value) {\n              if (_this.state.cPost.indexOf(\"\".concat(name, \"=\").concat(_this.state.cInput.email, \"&\")) != -1) {\n                _this.setState({\n                  query: _this.state.cPost.replace(\"\".concat(name, \"=\").concat(_this.state.cInput.email, \"&\"), \"\") + \"\".concat(name, \"=\") + value + \"&\"\n                });\n              } else {\n                _this.setState({\n                  cPost: _this.state.cPost + \"\".concat(name, \"=\") + value + \"&\"\n                });\n              }\n            } else {\n              if (_this.state.cPost.indexOf(\"\".concat(name, \"=\").concat(_this.state.cInput.email, \"&\")) != -1) {\n                _this.setState({\n                  query: _this.state.cPost.replace(\"\".concat(name, \"=\").concat(_this.state.cInput.email, \"&\"), \"\")\n                });\n              }\n            }\n\n            formInput.email = value;\n            break;\n\n          case \"phone\":\n            if (value) {\n              if (_this.state.cPost.indexOf(\"\".concat(name, \"=\").concat(_this.state.cInput.phone, \"&\")) != -1) {\n                _this.setState({\n                  query: _this.state.cPost.replace(\"\".concat(name, \"=\").concat(_this.state.cInput.phone, \"&\"), \"\") + \"\".concat(name, \"=\") + value + \"&\"\n                });\n              } else {\n                _this.setState({\n                  cPost: _this.state.cPost + \"\".concat(name, \"=\") + value + \"&\"\n                });\n              }\n            } else {\n              if (_this.state.cPost.indexOf(\"\".concat(name, \"=\").concat(_this.state.cInput.phone, \"&\")) != -1) {\n                _this.setState({\n                  query: _this.state.cPost.replace(\"\".concat(name, \"=\").concat(_this.state.cInput.phone, \"&\"), \"\")\n                });\n              }\n            }\n\n            formInput.phone = value;\n            break;\n\n          case \"subject\":\n            if (value) {\n              if (_this.state.cPost.indexOf(\"\".concat(name, \"=\").concat(_this.state.cInput.subject, \"&\")) != -1) {\n                _this.setState({\n                  query: _this.state.cPost.replace(\"\".concat(name, \"=\").concat(_this.state.cInput.subject, \"&\"), \"\") + \"\".concat(name, \"=\") + value + \"&\"\n                });\n              } else {\n                _this.setState({\n                  cPost: _this.state.cPost + \"\".concat(name, \"=\") + value + \"&\"\n                });\n              }\n            } else {\n              if (_this.state.cPost.indexOf(\"\".concat(name, \"=\").concat(_this.state.cInput.subject, \"&\")) != -1) {\n                _this.setState({\n                  query: _this.state.cPost.replace(\"\".concat(name, \"=\").concat(_this.state.cInput.subject, \"&\"), \"\")\n                });\n              }\n            }\n\n            formInput.subject = value;\n            break;\n\n          case \"message\":\n            if (value) {\n              if (_this.state.cPost.indexOf(\"\".concat(name, \"=\").concat(_this.state.cInput.message, \"&\")) != -1) {\n                _this.setState({\n                  query: _this.state.cPost.replace(\"\".concat(name, \"=\").concat(_this.state.cInput.message, \"&\"), \"\") + \"\".concat(name, \"=\") + value + \"&\"\n                });\n              } else {\n                _this.setState({\n                  cPost: _this.state.cPost + \"\".concat(name, \"=\") + value + \"&\"\n                });\n              }\n            } else {\n              if (_this.state.cPost.indexOf(\"\".concat(name, \"=\").concat(_this.state.cInput.message, \"&\")) != -1) {\n                _this.setState({\n                  query: _this.state.cPost.replace(\"\".concat(name, \"=\").concat(_this.state.cInput.message, \"&\"), \"\")\n                });\n              }\n            }\n\n            formInput.message = value;\n            break;\n        }\n\n        _this.setState({\n          cInput: formInput\n        });\n      },\n      input: {\n        name: null,\n        surname: null,\n        city: null,\n        adress: null,\n        adress2: null,\n        email: null,\n        number: null,\n        note: null\n      },\n      query: \"?\",\n      postOrderForm: function postOrderForm() {\n        console.log(\"post: \");\n        console.log(\"_\", _this.state.query);\n      },\n      inputHandler: function inputHandler(e) {\n        var _e$target2 = e.target,\n            name = _e$target2.name,\n            value = _e$target2.value;\n        console.log(\"name: \", name);\n        console.log(\"value: \", value);\n\n        var formInput = _objectSpread({}, _this.state.input);\n\n        switch (name) {\n          case \"name\":\n            if (value) {\n              if (_this.state.query.indexOf(\"\".concat(name, \"=\").concat(_this.state.input.name, \"&\")) != -1) {\n                _this.setState({\n                  query: _this.state.query.replace(\"\".concat(name, \"=\").concat(_this.state.input.name, \"&\"), \"\") + \"\".concat(name, \"=\") + value + \"&\"\n                });\n              } else {\n                _this.setState({\n                  query: _this.state.query + \"\".concat(name, \"=\") + value + \"&\"\n                });\n              }\n            } else {\n              if (_this.state.query.indexOf(\"\".concat(name, \"=\").concat(_this.state.input.name, \"&\")) != -1) {\n                _this.setState({\n                  query: _this.state.query.replace(\"\".concat(name, \"=\").concat(_this.state.input.name, \"&\"), \"\")\n                });\n              }\n            }\n\n            formInput.name = value;\n            break;\n\n          case \"surname\":\n            if (value) {\n              if (_this.state.query.indexOf(\"\".concat(name, \"=\").concat(_this.state.input.surname, \"&\")) != -1) {\n                _this.setState({\n                  query: _this.state.query.replace(\"\".concat(name, \"=\").concat(_this.state.input.surname, \"&\"), \"\") + \"\".concat(name, \"=\") + value + \"&\"\n                });\n              } else {\n                _this.setState({\n                  query: _this.state.query + \"\".concat(name, \"=\") + value + \"&\"\n                });\n              }\n            } else {\n              if (_this.state.query.indexOf(\"\".concat(name, \"=\").concat(_this.state.input.surname, \"&\")) != -1) {\n                _this.setState({\n                  query: _this.state.query.replace(\"\".concat(name, \"=\").concat(_this.state.input.surname, \"&\"), \"\")\n                });\n              }\n            }\n\n            formInput.surname = value;\n            break;\n\n          case \"city\":\n            if (value) {\n              if (_this.state.query.indexOf(\"\".concat(name, \"=\").concat(_this.state.input.city, \"&\")) != -1) {\n                _this.setState({\n                  query: _this.state.query.replace(\"\".concat(name, \"=\").concat(_this.state.input.city, \"&\"), \"\") + \"\".concat(name, \"=\") + value + \"&\"\n                });\n              } else {\n                _this.setState({\n                  query: _this.state.query + \"\".concat(name, \"=\") + value + \"&\"\n                });\n              }\n            } else {\n              if (_this.state.query.indexOf(\"\".concat(name, \"=\").concat(_this.state.input.city, \"&\")) != -1) {\n                _this.setState({\n                  query: _this.state.query.replace(\"\".concat(name, \"=\").concat(_this.state.input.city, \"&\"), \"\")\n                });\n              }\n            }\n\n            formInput.city = value;\n            break;\n\n          case \"adress\":\n            if (value) {\n              if (_this.state.query.indexOf(\"\".concat(name, \"=\").concat(_this.state.input.adress, \"&\")) != -1) {\n                _this.setState({\n                  query: _this.state.query.replace(\"\".concat(name, \"=\").concat(_this.state.input.adress, \"&\"), \"\") + \"\".concat(name, \"=\") + value + \"&\"\n                });\n              } else {\n                _this.setState({\n                  query: _this.state.query + \"\".concat(name, \"=\") + value + \"&\"\n                });\n              }\n            } else {\n              if (_this.state.query.indexOf(\"\".concat(name, \"=\").concat(_this.state.input.adress, \"&\")) != -1) {\n                _this.setState({\n                  query: _this.state.query.replace(\"\".concat(name, \"=\").concat(_this.state.input.adress, \"&\"), \"\")\n                });\n              }\n            }\n\n            formInput.adress = value;\n            break;\n\n          case \"adress2\":\n            if (value) {\n              if (_this.state.query.indexOf(\"\".concat(name, \"=\").concat(_this.state.input.adress2, \"&\")) != -1) {\n                _this.setState({\n                  query: _this.state.query.replace(\"\".concat(name, \"=\").concat(_this.state.input.adress2, \"&\"), \"\") + \"\".concat(name, \"=\") + value + \"&\"\n                });\n              } else {\n                _this.setState({\n                  query: _this.state.query + \"\".concat(name, \"=\") + value + \"&\"\n                });\n              }\n            } else {\n              if (_this.state.query.indexOf(\"\".concat(name, \"=\").concat(_this.state.input.adress2, \"&\")) != -1) {\n                _this.setState({\n                  query: _this.state.query.replace(\"\".concat(name, \"=\").concat(_this.state.input.adress2, \"&\"), \"\")\n                });\n              }\n            }\n\n            formInput.adress2 = value;\n            break;\n\n          case \"email\":\n            if (value) {\n              if (_this.state.query.indexOf(\"\".concat(name, \"=\").concat(_this.state.input.email, \"&\")) != -1) {\n                _this.setState({\n                  query: _this.state.query.replace(\"\".concat(name, \"=\").concat(_this.state.input.email, \"&\"), \"\") + \"\".concat(name, \"=\") + value + \"&\"\n                });\n              } else {\n                _this.setState({\n                  query: _this.state.query + \"\".concat(name, \"=\") + value + \"&\"\n                });\n              }\n            } else {\n              if (_this.state.query.indexOf(\"\".concat(name, \"=\").concat(_this.state.input.email, \"&\")) != -1) {\n                _this.setState({\n                  query: _this.state.query.replace(\"\".concat(name, \"=\").concat(_this.state.input.email, \"&\"), \"\")\n                });\n              }\n            }\n\n            formInput.email = value;\n            break;\n\n          case \"phone\":\n            if (value) {\n              if (_this.state.query.indexOf(\"\".concat(name, \"=\").concat(_this.state.input.phone, \"&\")) != -1) {\n                _this.setState({\n                  query: _this.state.query.replace(\"\".concat(name, \"=\").concat(_this.state.input.phone, \"&\"), \"\") + \"\".concat(name, \"=\") + value + \"&\"\n                });\n              } else {\n                _this.setState({\n                  query: _this.state.query + \"\".concat(name, \"=\") + value + \"&\"\n                });\n              }\n            } else {\n              if (_this.state.query.indexOf(\"\".concat(name, \"=\").concat(_this.state.input.phone, \"&\")) != -1) {\n                _this.setState({\n                  query: _this.state.query.replace(\"\".concat(name, \"=\").concat(_this.state.input.phone, \"&\"), \"\")\n                });\n              }\n            }\n\n            formInput.phone = value;\n            break;\n\n          case \"note\":\n            if (value) {\n              if (_this.state.query.indexOf(\"\".concat(name, \"=\").concat(_this.state.input.note, \"&\")) != -1) {\n                _this.setState({\n                  query: _this.state.query.replace(\"\".concat(name, \"=\").concat(_this.state.input.note, \"&\"), \"\") + \"\".concat(name, \"=\") + value + \"&\"\n                });\n              } else {\n                _this.setState({\n                  query: _this.state.query + \"\".concat(name, \"=\") + value + \"&\"\n                });\n              }\n            } else {\n              if (_this.state.query.indexOf(\"\".concat(name, \"=\").concat(_this.state.input.note, \"&\")) != -1) {\n                _this.setState({\n                  query: _this.state.query.replace(\"\".concat(name, \"=\").concat(_this.state.input.note, \"&\"), \"\")\n                });\n              }\n            }\n\n            formInput.note = value;\n            break;\n        }\n\n        _this.setState({\n          input: formInput\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Provider, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Context.Provider, {\n        value: {\n          state: this.state\n        }\n      }, this.props.children);\n    }\n  }]);\n\n  return Provider;\n}(Component);\n\nvar Consumer = Context.Consumer;\nexport default Provider;\nexport { Consumer }; // let trow = `\n//         <tr>\n//         <td>\n//         <img src=\"/img/product/cart-img.jpg\" alt=\"\" />\n//         </td>\n//         <td id=\"basket-name\">${item.name}</td>\n//         <td class=\"basket-price\">${item.price}</td>\n//         <td>\n//         <select class=\"product_select\">\n//         <option data-display=\"1\">1</option>\n//         <option value=\"2\">2</option>\n//         <option value=\"3\">3</option>\n//         <option value=\"4\">4</option>\n//         <option value=\"5\">5</option>\n//         </select>\n//         </td>\n//         <td class=\"basket-total\">${item.price}</td>\n//         <td>\n//         <i class=\"fa fa-close\"/>\n//         </td>\n//         </tr>\n//     `;","map":null,"metadata":{},"sourceType":"module"}